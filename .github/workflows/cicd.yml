name: Build and Deploy for Java service

on:
  push:
    branches: [ development ]
  pull_request:
    branches: [ development ]

env:
  APP_NAME: talk-service
  NAMESPACE: my-first-project
  CLUSTER_NAME: zs-cloud-kickoff
  CLUSTER_PROJECT: bamboo-truck-251408
  GAR_PROJECT: bamboo-truck-251408
  GAR_REGISTRY: zs-cloud-registry

jobs:
  dockerize:
    runs-on: ubuntu-latest
    name: 🐳 Dockerize

    outputs:
      image: ${{ steps.output-image.outputs.image }}

    steps:
      - name: Checkout Code
        uses: actions/checkout@v2

      - name: Set up JDK 11
        uses: actions/setup-java@v1
        with:
          java-version: 11.0.10

      - name: Build with Gradle
        run: ./gradlew clean build

      - name: Upload Artifacts
        uses: actions/upload-artifact@v2
        with:
          name: artifacts
          path: build/libs

      - name: Download Artifacts
        uses: actions/download-artifact@v2
        with:
          name: artifacts
          path: build/libs

      - name: Login to GAR
        uses: docker/login-action@v2
        with:
          registry: us-central1-docker.pkg.dev
          username: _json_key
          password: ${{ secrets.DEPLOYMENT_KEY }}

      - name: Build and Push Docker Image to GAR
        uses: docker/build-push-action@v2
        with:
          push: true
          context: .
          file: ./Dockerfile
          tags:
            us-central1-docker.pkg.dev/${{ env.GAR_PROJECT }}/${{ env.GAR_REGISTRY }}/${{ env.APP_NAME }}:${{ github.sha }}
      - id: output-image
        run:
          echo "image=`echo us-central1-docker.pkg.dev/${{ env.GAR_PROJECT }}/${{ env.GAR_REGISTRY }}/${{ env.APP_NAME }}:${{ github.sha }}`" >> "$GITHUB_OUTPUT"

  deployment:
    runs-on: ubuntu-latest
    needs: dockerize
    name: 🚀 Deploy
    env:
      image: ${{ needs.dockerize.outputs.image }}

    steps:
      - name: Checkout Code
        uses: actions/checkout@v2

      - name: Set up Cloud SDK
        uses: google-github-actions/setup-gcloud@v0
        with:
          project_id: ${{ env.CLUSTER_PROJECT }}
          service_account_key: ${{ secrets.DEPLOYMENT_KEY }}
          export_default_credentials: true

      - name: Update Kubectl component
        run: gcloud --quiet components update kubectl

      - name: Set GCloud Project and Fetch Cluster Credentials
        run:
          gcloud container clusters get-credentials ${{ env.CLUSTER_NAME }}  --region=us-central1 --project=${{ env.CLUSTER_PROJECT }}

      - name: Update Deployment Image
        run:
          kubectl set image deployment/${{ env.APP_NAME }} ${{ env.APP_NAME }}=${{ env.image }} --namespace ${{ env.NAMESPACE }}
